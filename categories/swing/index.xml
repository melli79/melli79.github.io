<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Swing on Melchior&#39;s Homepage</title>
    <link>https://melli79.github.io/categories/swing/</link>
    <description>Recent content in Swing on Melchior&#39;s Homepage</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en</language>
    <lastBuildDate>Sat, 25 Jun 2022 12:35:50 +0200</lastBuildDate><atom:link href="https://melli79.github.io/categories/swing/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>13 Mandelbrot (Apfelmännchen)</title>
      <link>https://melli79.github.io/post/13mandelbrot/</link>
      <pubDate>Sat, 25 Jun 2022 12:35:50 +0200</pubDate>
      
      <guid>https://melli79.github.io/post/13mandelbrot/</guid>
      <description>Nachdem wir letzte Woche Korbmuster gemalt haben, wollen wir heute weitere mathematische Kunst produzieren.
Das Ziel  0. Programm Aufsetzen Das kennst du vielleicht schon: Du legst ein neues Kotlin/JVM-Projekt an und schreibst das Hauptprogramm etwa so:
1 2 3 4 5 6 7 8 9 10 11 12 13 14  class MainWindow(contentPane :JComponent) :JFrame(&amp;#34;Mandelbrot&amp;#34;) { init { this.layout = BorderLayout() this.contentPane = contentPane this.setSize(500, 500) defaultCloseOperation = EXIT_ON_CLOSE } } fun main(args :Array&amp;lt;String&amp;gt;) { val window = MainWindow(Mandelbrot()) window.</description>
    </item>
    
    <item>
      <title>12 Moderne Kunst</title>
      <link>https://melli79.github.io/post/12modernart/</link>
      <pubDate>Mon, 18 Apr 2022 16:05:50 +0200</pubDate>
      
      <guid>https://melli79.github.io/post/12modernart/</guid>
      <description>Nachdem wir letzte Woche Augen gemalt haben, wollen wir heute moderne Kunst produzieren.
Das Ziel 1. Projekt aufsetzen Das geht so ähnlich wie beim letzten Projekt: Unter Datei &amp;gt; Neu &amp;gt; Projekt &amp;hellip; ein Kotlin-Projekt mit Namen &amp;ldquo;Modern Art&amp;rdquo; aufsetzen mit dem gleichen JDK wie beim letzten Mal.
Dann im Hauptprogramm &amp;ldquo;Main.kt&amp;rdquo;:
1 2 3 4 5 6 7 8 9 10 11 12 13 14  class MainWindow(contentPane :JComponent) :JFrame(&amp;#34;Modern Art&amp;#34;) { init { this.</description>
    </item>
    
    <item>
      <title>11 Augen malen</title>
      <link>https://melli79.github.io/post/11eyes/</link>
      <pubDate>Sun, 10 Apr 2022 12:31:50 +0200</pubDate>
      
      <guid>https://melli79.github.io/post/11eyes/</guid>
      <description>Nachdem ihr eine Entwicklungsumgebung aufgesetzt habt, wollen wir heute etwas malen.
Das Ziel 1. Projekt aufsetzen So, wie in der Anleitung im Schritt 2B angegeben, erstellt ihr eine Datei &amp;gt; Neu &amp;gt; Projekt &amp;hellip; vom Typ Kotlin, Console Application. Ihr könnt dem Projekt einen ordentlichen Namen geben, z.B. Eyes (engl. für Augen), achtet darauf, dass das Build-System Gradle-Kotlin ist, das Projekt open JDK 11 (oder was ihr damals als Java-Umgebung installiert habt) verwendet.</description>
    </item>
    
  </channel>
</rss>
